#include <iostream>				// Для консольного вводу та вивоводу
#include <windows.h>			// Для кирилиці

using namespace std;

int main()
{
	// Пчаткові налаштування
	int n = 0;					// Висота масиву
	int	m = 0;					// Ширина масиву
	int a[100][100];			// Створення масиву (більшого розміру для зручності зчитування)
	bool error = false;			// Змінна яка відслідковує чи була помилка при зчитуванні масиву
	SetConsoleCP(1251);			// Підключемо кирилицю
	SetConsoleOutputCP(1251);	//

	// Зчитування з консолі масиву
	int i = 0, j = 0;		// Індекси масиву
	char h;					// Зміння для пошуку символу переходу на нову строку
	// Зчитуээмо першу строку
	do
	{
		cin >> a[i][j++];	// Заносимо елемент до масиву
		h = cin.get();		// Пошук символу переходу на нову строку
	} while (h != '\n');	// Читаємо значення доки не зустрінемо символ переходу на нову строку
	m = j;					// Фіксуємо ширину масиву

	// Зчитування інших строк
	i = 1;						// Змінемо значення індексу на наступну строку
	while (cin.peek() != '\n')	// Читаємо строки доки не зустрінемо пусту строку (тобто лише символ переходу на нову строку)
	{
		j = 0;					// Збросимо значення індексу до 0
		do
		{
			cin >> a[i][j++];	// Заносимо елемент до масиву
			h = cin.get();		// Пошук символу переходу на нову строку
		} while (h != '\n');	// Читаємо значення доки не зустрінемо символ переходу на нову строку

		if (j != m)				// Якщо зайшли за ширину
			break;				// прервемо зчитування

		i++;					// Змінемо значення індексу на наступну строку
	}


	// Знайдемо відповідь
	n = i;								// Зафіксуємо висоту масиву
	int dn = n - 1, dm = m - 1;			// Границі кількісті незчитаних елементів
	int c = 0;							// Індекс масиву відповіді
	int* r = new int[n * m];			// Масив для виводу відповіді
	i = 0, j = 0;						// Збросимо індекси
	while (dn > 0 && dm > 0)			// Доки не вийдемо за границі
	{
		for (int k = 0; k < dm; k++)	// Зчитаємо вправо
			r[c++] = a[i][j++];			// Запис до масиву відповідей
		for (int k = 0; k < dn; k++)	// Зчитаємо вниз
			r[c++] = a[i++][j];			//
		for (int k = 0; k < dm; k++)	// Зчитаємо вліво
			r[c++] = a[i][j--];			//
		for (int k = 0; k < dn; k++)	// Зчитаємо вгору
			r[c++] = a[i--][j];			//
		dn -= 2;						// Корегуємо границі
		dm -= 2;						//
		i++;							// Зміна індексів
		j++;							//
	}
	// Запис останнього елементу залежно від того де вийшли за границю
	if (dn == 0)
	{
		for (int k = -1; k < dm; k++)
			r[c++] = a[i][j++];
	}
	else if (dm == 0)
	{
		for (int k = -1; k < dn; k++)
			r[c++] = a[i++][j];
	}

	// Виводимо відповідь
	cout << "Відповідь: ";
	for (int i = 0; i < c; i++)
		cout << r[i] << ' ';

	return 0;
}
